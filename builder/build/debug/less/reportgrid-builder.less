@import "bootstrap";
@import "font-icons";

@side-width:  200px;
@side-padding-right:  18px;
//@side-margin: 5px;
@display-label-width: 60px;
@display-divider-width: 4px;
@display-padding: 5px;
@display-margin: 10px;
@display-divider-weight: 2px;
@secondary-label-color: #ccc;
@display-divider-radius: 2px; //@display-divider-width;
@display-divider-color: #eee;
@display-font: bold 12px "Helvetica Neue", Helvetica, Arial, sans-serif;
@display-label-font: normal 10px "Helvetica Neue", Helvetica, Arial, sans-serif;

// UTILITIES
.border-radius (@radius) {
	border-radius: @radius;
	-moz-border-radius: @radius;
	-webkit-border-radius: @radius;
}

.border-radius-tl (@radius) {
	border-top-left-radius: @radius;
	-moz-border-radius-topleft: @radius;
	-webkit-border-top-left-radius: @radius;
}

.border-radius-tr (@radius) {
	border-top-right-radius: @radius;
	-moz-border-radius-topright: @radius;
	-webkit-border-top-right-radius: @radius;
}

.border-radius-bl (@radius) {
	border-bottom-left-radius: @radius;
	-moz-border-radius-bottomleft: @radius;
	-webkit-border-bottom-left-radius: @radius;
}

.border-radius-br (@radius) {
	border-bottom-right-radius: @radius;
	-moz-border-radius-bottomright: @radius;
	-webkit-border-bottom-right-radius: @radius;
}

.box-shadow (@x: 0, @y: 0, @blur: 1px, @color: #000) {
  box-shadow: @arguments;
  -moz-box-shadow: @arguments;
  -webkit-box-shadow: @arguments;
}

// definitions

.rg-builder {
	position: relative;

	// start Bootstrap Generic Redefinitions
	.navbar {
		margin-bottom: @display-padding;

		.navbar-inner {
			background-color: rgba(1,1,1,0.1);
			background-image: none;
			border: 1px solid rgba(1,1,1,0.1);
			.box-shadow(2px,2px,2px,rgba(1,1,1,0.075));
			min-height: 32px;
		}

		.divider-vertical {
			background-color: rgba(1,1,1,0.1);
			border-right: 1px solid rgba(1,1,1,0.15);
		}
	}

	// end Bootstrap

	div {
		position: relative;
	}

	.rgb-pane {
		position: absolute;
	}

	.rgb-pane-controls-main {
		width: @side-width - @side-padding-right;
		overflow: auto;
		padding-right: @side-padding-right;
	}

	.rgb-pane-controls-secondary {
		width: @side-width - @side-padding-right;
		padding-right: @side-padding-right;
		overflow: auto;
	}

	.rgb-pane-chart {
		overflow: auto;
	}

	.rgb-clear {
		clear: both;
	}

	.rgb-display-box {
		margin-bottom: @display-margin;
		font: @display-font;
		.rgb-label {
			width: @display-label-width;
			position: absolute;
			top: 50%;
			text-align: right;
			margin-top: -0.7em;
			color: @secondary-label-color;
			font: @display-label-font;
		}
		.rgb-divider {
			width: @display-divider-width;
			height: 100%;
			position: absolute;
			left: @display-label-width + @display-padding;
			margin-top: -@display-divider-weight / 2;
			.rgb-divider-top {
				border-right: @display-divider-weight solid @display-divider-color;
				border-bottom: @display-divider-weight / 2 solid @display-divider-color;
				.border-radius-br(@display-divider-radius);
				height: 50%;
			}
			.rgb-divider-bottom {
				border-top: @display-divider-weight / 2 solid @display-divider-color;
				border-right: @display-divider-weight solid @display-divider-color;
				.border-radius-tr(@display-divider-radius);
				height: 50%;
			}
		}
		.rgb-box {
			left: @display-label-width + @display-padding * 2 + @display-divider-width + @display-divider-weight;
			width: @side-width - (@display-label-width + @display-padding * 2 + @display-divider-width + @display-divider-weight + @side-padding-right);
			.rgb-display-item {
				clear: left;
				.rgb-item-display {
				}
				.rgb-item-context {
					float: right;
					z-index: 100;
					color: @secondary-label-color;
					font-weight: normal;
				}
			}
		}
	}

	p.rgb-header {
		color: @secondary-label-color;
		padding: 0;
		margin: 0;
	}

	p.rgb-display-box-title {
		padding-left: @display-label-width + @display-padding * 2 + @display-divider-width + @display-divider-weight;
		margin-bottom: @display-padding;
	}
}


/*
lighten(@color, 10%);     // return a color which is 10% *lighter* than @color
darken(@color, 10%);      // return a color which is 10% *darker* than @color

saturate(@color, 10%);    // return a color 10% *more* saturated than @color
desaturate(@color, 10%);  // return a color 10% *less* saturated than @color

fadein(@color, 10%);      // return a color 10% *less* transparent than @color
fadeout(@color, 10%);     // return a color 10% *more* transparent than @color
fade(@color, 50%);        // return @color with 50% transparency

spin(@color, 10);         // return a color with a 10 degree larger in hue than @color
spin(@color, -10);        // return a color with a 10 degree smaller hue than @color

mix(@color1, @color2);    // return a mix of @color1 and @color2
*/